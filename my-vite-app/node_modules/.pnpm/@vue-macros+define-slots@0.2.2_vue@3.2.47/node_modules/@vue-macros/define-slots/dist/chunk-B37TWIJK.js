"use strict";Object.defineProperty(exports, "__esModule", {value: true});// src/index.ts
var _unplugin = require('unplugin');
var _pluginutils = require('@rollup/pluginutils');





var _common = require('@vue-macros/common');

// src/core/index.ts







function transformDefineSlots(code, id) {
  if (!code.includes(_common.DEFINE_SLOTS))
    return;
  const { scriptSetup, getSetupAst } = _common.parseSFC.call(void 0, code, id);
  if (!scriptSetup)
    return;
  const s = new (0, _common.MagicString)(code);
  for (const stmt of getSetupAst().body) {
    if (stmt.type === "ExpressionStatement" && _common.isCallOf.call(void 0, stmt.expression, _common.DEFINE_SLOTS)) {
      s.overwriteNode(stmt, "/*defineSlots*/", {
        offset: scriptSetup.loc.start.offset
      });
    }
  }
  return _common.getTransformResult.call(void 0, s, id);
}

// src/index.ts
function resolveOption(options, framework) {
  const version = options.version || _common.detectVueVersion.call(void 0, );
  return {
    include: [_common.REGEX_VUE_SFC, _common.REGEX_SETUP_SFC].concat(
      version === 2 && framework === "webpack" ? _common.REGEX_VUE_SUB : []
    ),
    ...options,
    version
  };
}
var name = "unplugin-vue-define-slots";
var src_default = _unplugin.createUnplugin.call(void 0, 
  (userOptions = {}, { framework }) => {
    const options = resolveOption(userOptions, framework);
    const filter = _pluginutils.createFilter.call(void 0, options.include, options.exclude);
    return {
      name,
      enforce: "pre",
      transformInclude(id) {
        return filter(id);
      },
      transform(code, id) {
        try {
          return transformDefineSlots(code, id);
        } catch (err) {
          this.error(`${name} ${err}`);
        }
      }
    };
  }
);



exports.src_default = src_default;
